---
- hosts: localhost
  connection: local
  become: true
  vars:
      ansible_python_interpreter: /usr/local/bin/python3.9
      version_base: /usr/local/mfctracker
      version: git
      app_path: "{{version_path}}/app"
      venv_path: "{{version_path}}/venv"

  tasks:
    - name: install packages
      pkgng: name={{item}} state=present
      with_items:
        - openldap26-client
        - ca_root_nss

    - name: Get SHA1 for the version name
      git:
        repo: https://github.com/gonzoua/mfctracker.git
        version: "{{version}}"
        clone: no
      register: git_info

    - name: set version dir
      set_fact: version_dir="{{ lookup('pipe', 'date +%Y%m%d-%H%M%S') }}-{{version}}-{{ git_info.after[0:7] }}"

    - name: set version path
      set_fact: version_path="{{version_base}}/{{ version_dir }}"

    - name: create version directory
      file: path="{{version_path}}"
            state=directory
            mode=0755

    - name: Checkout latest version of mfctracker source code
      git:
        repo: https://github.com/gonzoua/mfctracker.git
        version: "{{version}}"
        dest: "{{app_path}}"

    - name: create venv directory
      file: path="{{venv_path}}" state=directory mode=0755

    - name: install requirements
      pip:
        requirements: "{{app_path}}/requirements.txt"
        virtualenv: "{{venv_path}}"
      register: pip_result

    - debug:
        msg: pip_result

    - name: Add version info
      lineinfile:
        dest: "{{app_path}}/mfctracker/__init__.py"
        regexp: "^VERSION.*"
        line: "VERSION = '{{version}} {{ git_info.after[0:7] }}: {{ ansible_date_time.iso8601 }}'"

    - name: De-activate sync cron job
      cron:
        name: "mfctracker sync"
        user: mfctracker
        state: absent

    - name: Wait for sync script to finish
      wait_for:
        path: /var/tmp/mfctracker.sync.lock
        state: absent

    - name: Switch nginx to maintenance mode
      become: true
      copy:
        src: files/maintenance.html
        dest: "{{version_base}}/html/maintenance.html"

    - name: Stop supervisord
      service:
        name: supervisord
        state: stopped

    - name: migrate
      django_manage: command=migrate app_path="{{app_path}}" virtualenv="{{venv_path}}"

    - name: fix ownership
      file:
        path: "{{version_path}}"
        owner: mfctracker
        group: mfctracker
        recurse: yes

    - name: create symlink to latest version
      file:
        src: "{{version_dir}}"
        dest: "{{version_base}}/latest"
        state: link
        owner: mfctracker
        group: mfctracker

    - name: Start supervisord
      service:
        name: supervisord
        state: started

    - name: remove maintenance page
      file: path="{{version_base}}/html/maintenance.html" state=absent

    - name: Activate sync cron job
      cron:
        name: "mfctracker sync"
        user: mfctracker
        minute: "*/7"
        job: "{{version_base}}/latest/app/scripts/sync.sh -l 1000"
